{
    "env": {
        "browser": true,
        "es6": true
    },
    "extends": [
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:@typescript-eslint/eslint-recommended"
    ],
    "globals": {
        "Atomics": "readonly",
        "SharedArrayBuffer": "readonly"
    },
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": 2018,
        "sourceType": "module"
    },
    "plugins": [
        "@typescript-eslint",
        "promise",
        "react",
        "react-hooks",
        "simple-import-sort",
		"sort-destructure-keys"
    ],
    "settings": {
        "react": {
          "pragma": "React",  // Pragma to use, default to "React"
          "version": "detect"
        }
    },
    "rules": {
        "@typescript-eslint/no-unused-vars": "error",
        "arrow-spacing":["warn",{ "before": true, "after": true }],
        "comma-dangle": ["error", "never"],
        "indent": ["error", 2],
        "no-multiple-empty-lines": ["error", {"max": 1}],
        "no-trailing-spaces": ["warn"],
        "object-curly-spacing": ["error", "always"],
        "quotes": ["error", "single",  { "avoidEscape": true }],
        "react-hooks/rules-of-hooks": "error",
        "semi": [2, "always"],
        "sort-keys": ["error", "asc", {"caseSensitive": true, "natural": false, "minKeys": 2}],
        "switch-colon-spacing": ["error", {"after": true, "before": false}],
        "function-paren-newline": ["error", { "minItems": 8 }],

        "newline-before-return": "error",
        "no-bitwise": "off",


        "no-unused-vars": ["error", { "args": "none" }],
        "object-curly-newline": ["error", {
            "ImportDeclaration": "never",
            "ObjectPattern": "never"
          }],
        "padding-line-between-statements": [
        "error",
            { "blankLine": "always", "prev": ["const", "let", "var"], "next": "*" },
            { "blankLine": "any", "prev": ["const", "let", "var"], "next": ["const", "let", "var"] },
            { "blankLine": "always", "prev": "*", "next": "block-like" },
            { "blankLine": "always", "prev": "block-like", "next": "*" },
            { "blankLine": "always", "prev": "*", "next": "function" },
            { "blankLine": "always", "prev": "function", "next": "*" },
            { "blankLine": "always", "prev": "*", "next": "try" },
            { "blankLine": "always", "prev": "try", "next": "*" },
            { "blankLine": "always", "prev": "*", "next": "return" },
            { "blankLine": "always", "prev": "*", "next": "import" },
            { "blankLine": "always", "prev": "import", "next": "*" },
            { "blankLine": "any", "prev": "import", "next": "import" }
        ],
        "react-hooks/exhaustive-deps": "error",
        "react/jsx-fragments": "error",
        "react/jsx-max-props-per-line": [2, {
            "maximum": 1,
            "when": "always"
        }],
        "react/jsx-sort-props": [2, {
            "noSortAlphabetically": false
        }],
        "sort-destructure-keys/sort-destructure-keys": [2, {
        "caseSensitive": true
        }],
        "simple-import-sort/imports": [2, {
        "groups": [
            ["^\u0000"], // all side-effects (0 at start)
            ["\u0000$", "^@polkadot.*\u0000$", "^\\..*\u0000$"], // types (0 at end)
            ["\u0000$", "^@.*\u0000$", "^\\..*\u0000$"], // types (0 at end)
            ["^[^/\\.]"], // non-polkadot
            ["^@polkadot"], // polkadot
            ["^\\.\\.(?!/?$)", "^\\.\\./?$", "^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"] // local (. last)
            ]
        }],
        "space-in-parens": ["error", "never"]
    }
}
