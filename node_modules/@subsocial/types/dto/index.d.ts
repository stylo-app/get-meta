import { Space, Post, SocialAccount, Profile } from '../substrate/interfaces';
import { CommonContent, SpaceContent, PostContent, CommentContent, ProfileContent } from '../offchain';
import { CommonStruct } from '../substrate';
import { AccountId } from '@polkadot/types/interfaces';
export declare type CommonData<S extends CommonStruct, C extends CommonContent> = {
    struct: S;
    content?: C;
};
export declare type SocialAccountWithId = SocialAccount & {
    id: AccountId;
};
export declare type SpaceData = CommonData<Space, SpaceContent>;
export declare type PostData = CommonData<Post, PostContent>;
export declare type CommentData = CommonData<Post, CommentContent>;
export declare type ProfileData = CommonData<SocialAccountWithId, ProfileContent> & {
    profile?: Profile;
};
export declare type AnySubsocialData = SpaceData | PostData | CommentData | ProfileData;
export declare type PostWithSomeDetails = {
    post: PostData;
    ext?: Exclude<PostWithSomeDetails, 'ext'>;
    owner?: ProfileData;
    space?: SpaceData;
};
export declare type PostWithOwner = Exclude<PostWithSomeDetails, 'owner'> & {
    owner: ProfileData;
};
export declare type PostWithSpace = Exclude<PostWithSomeDetails, 'space'> & {
    space: SpaceData;
};
export declare type PostWithAllDetails = PostWithOwner & PostWithSpace;
