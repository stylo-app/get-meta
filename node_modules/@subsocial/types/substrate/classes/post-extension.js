"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PostExtension = exports.Comment = exports.SharedPost = exports.RegularPost = void 0;
/* eslint-disable @typescript-eslint/adjacent-overload-signatures */
const types_1 = require("@polkadot/types");
const registry_1 = __importDefault(require("../registry"));
class RegularPost extends types_1.Null {
}
exports.RegularPost = RegularPost;
class SharedPost extends types_1.u64 {
}
exports.SharedPost = SharedPost;
class Comment extends types_1.Struct {
    constructor(value) {
        super(registry_1.default, {
            parent_id: 'Option<u64>',
            root_post_id: 'u64'
        }, value);
    }
    get parent_id() {
        return this.get('parent_id');
    }
    get root_post_id() {
        return this.get('root_post_id');
    }
}
exports.Comment = Comment;
class PostExtension extends types_1.Enum {
    constructor(value) {
        super(registry_1.default, {
            RegularPost,
            Comment: Comment,
            SharedPost
        }, value);
    }
    get isComment() {
        return this.type === 'Comment';
    }
    get asComment() {
        return this.value;
    }
    get isRegularPost() {
        return this.type === 'RegularPost';
    }
    get isSharedPost() {
        return this.type === 'SharedPost';
    }
    get isSharedComment() {
        return this.type === 'SharedComment';
    }
    get asSharedPost() {
        return this.value;
    }
}
exports.PostExtension = PostExtension;
