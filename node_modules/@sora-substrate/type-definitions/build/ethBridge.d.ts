declare const _default: {
    rpc: {
        getRequests: {
            description: string;
            params: {
                name: string;
                type: string;
            }[];
            type: string;
        };
        getApprovedRequests: {
            description: string;
            params: {
                name: string;
                type: string;
            }[];
            type: string;
        };
        getApprovals: {
            description: string;
            params: {
                name: string;
                type: string;
            }[];
            type: string;
        };
        getAccountRequests: {
            description: string;
            params: {
                name: string;
                type: string;
            }[];
            type: string;
        };
        getRegisteredAssets: {
            description: string;
            params: {
                name: string;
                type: string;
            }[];
            type: string;
        };
    };
    types: {
        BridgeNetworkId: string;
        NetworkId: string;
        AssetKind: {
            _enum: string[];
        };
        RequestStatus: {
            _enum: string[];
        };
        SignatureParams: {
            r: string;
            s: string;
            v: string;
        };
        IncomingRequestKind: {
            _enum: string[];
        };
        CurrencyIdEncoded: {
            _enum: {
                AssetId: string;
                TokenAddress: string;
            };
        };
        FixedBytes: string;
        OutgoingTransfer: {
            from: string;
            to: string;
            asset_id: string;
            amount: string;
            nonce: string;
            network_id: string;
        };
        OutgoingTransferEncoded: {
            currency_id: string;
            amount: string;
            to: string;
            from: string;
            tx_hash: string;
            network_id: string;
            raw: string;
        };
        OutgoingAddAsset: {
            author: string;
            asset_id: string;
            supply: string;
            nonce: string;
            network_id: string;
        };
        OutgoingAddAssetEncoded: {
            name: string;
            symbol: string;
            decimal: string;
            supply: string;
            sidechain_asset_id: string;
            hash: string;
            network_id: string;
            raw: string;
        };
        OutgoingAddToken: {
            author: string;
            token_address: string;
            ticker: string;
            name: string;
            decimals: string;
            nonce: string;
            network_id: string;
        };
        OutgoingAddTokenEncoded: {
            token_address: string;
            ticker: string;
            name: string;
            decimals: string;
            hash: string;
            network_id: string;
            raw: string;
        };
        OutgoingAddPeer: {
            author: string;
            peer_address: string;
            peer_account_id: string;
            nonce: string;
            network_id: string;
        };
        OutgoingAddPeerEncoded: {
            peer_address: string;
            tx_hash: string;
            network_id: string;
            raw: string;
        };
        OutgoingRemovePeer: {
            author: string;
            peer_account_id: string;
            peer_address: string;
            nonce: string;
            network_id: string;
        };
        OutgoingRemovePeerEncoded: {
            peer_address: string;
            tx_hash: string;
            network_id: string;
            raw: string;
        };
        OutgoingPrepareForMigration: {
            author: string;
            nonce: string;
            network_id: string;
        };
        OutgoingPrepareForMigrationEncoded: {
            this_contract_address: string;
            tx_hash: string;
            network_id: string;
            raw: string;
        };
        OutgoingMigrate: {
            author: string;
            new_contract_address: string;
            erc20_native_tokens: string;
            nonce: string;
            network_id: string;
        };
        OutgoingMigrateEncoded: {
            this_contract_address: string;
            tx_hash: string;
            new_contract_address: string;
            erc20_native_tokens: string;
            network_id: string;
            raw: string;
        };
        OutgoingRequest: {
            _enum: {
                Transfer: string;
                AddAsset: string;
                AddToken: string;
                AddPeer: string;
                RemovePeer: string;
                PrepareForMigration: string;
                Migrate: string;
            };
        };
        OutgoingRequestEncoded: {
            _enum: {
                Transfer: string;
                AddAsset: string;
                AddToken: string;
                AddPeer: string;
                RemovePeer: string;
                PrepareForMigration: string;
                Migrate: string;
            };
        };
        IncomingTransfer: {
            from: string;
            to: string;
            asset_id: string;
            asset_kind: string;
            amount: string;
            tx_hash: string;
            at_height: string;
            timepoint: string;
            network_id: string;
        };
        IncomingAddToken: {
            token_address: string;
            asset_id: string;
            precision: string;
            symbol: string;
            tx_hash: string;
            at_height: string;
            timepoint: string;
            network_id: string;
        };
        IncomingChangePeers: {
            peer_account_id: string;
            peer_address: string;
            added: string;
            tx_hash: string;
            at_height: string;
            timepoint: string;
            network_id: string;
        };
        IncomingClaimPswap: {
            account_id: string;
            eth_address: string;
            tx_hash: string;
            at_height: string;
            timepoint: string;
            network_id: string;
        };
        IncomingCancelOutgoingRequest: {
            request: string;
            tx_input: string;
            tx_hash: string;
            at_height: string;
            timepoint: string;
            network_id: string;
        };
        IncomingPrepareForMigration: {
            tx_hash: string;
            at_height: string;
            timepoint: string;
            network_id: string;
        };
        IncomingMigrate: {
            new_contract_address: string;
            tx_hash: string;
            at_height: string;
            timepoint: string;
            network_id: string;
        };
        IncomingRequest: {
            _enum: {
                Transfer: string;
                AddAsset: string;
                ChangePeers: string;
                ClaimPswap: string;
                CancelOutgoingRequest: string;
                PrepareForMigration: string;
                Migrate: string;
            };
        };
        IncomingPreRequest: {
            author: string;
            hash: string;
            timepoint: string;
            kind: string;
            network_id: string;
        };
        OffchainRequest: {
            _enum: {
                Outgoing: string;
                Incoming: string;
            };
        };
    };
};
export default _default;
